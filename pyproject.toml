[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lineforge"
version = "1.0.0"
description = "A cross-platform Python utility for normalizing line endings in text files"
authors = [
    {name = "tboy1337", url = "https://tboy1337.github.io/"}
]
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Utilities"
]
dependencies = [
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-timeout",
    "pytest-xdist",
    "pytest-mock",
    "pytest-cov",
    "pylint",
    "mypy",
    "black",
    "isort",
    "types-tqdm"
]

[project.scripts]
lineforge = "normalize:main"

[project.urls]
Homepage = "https://github.com/tboy1337/LineForge"
Repository = "https://github.com/tboy1337/LineForge"
Issues = "https://github.com/tboy1337/LineForge/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["normalize"]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
]

[tool.pylint.format]
max-line-length = 88

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "*/tests/*",
    "test_*",
    "*_test.py"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
testpaths = [
    "tests",
]
timeout = 300
